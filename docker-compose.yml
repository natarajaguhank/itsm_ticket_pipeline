version: "3.8"

services:

  postgres:
    image: postgres:15
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  airflow-webserver:
    build:
      context: ./airflow-image
    container_name: itsm_airflow_webserver
    restart: unless-stopped
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./data:/opt/airflow/dbt/data           # <-- CSV files folder inside container
      - ./dbt:/opt/airflow/dbt
      - ./dbt_profiles:/opt/airflow/dbt/profiles  # <-- mount profiles folder inside container
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command: >
      bash -c "
      /opt/airflow/wait-for-postgres.sh &&
      airflow db upgrade &&
      airflow users create --username admin --firstname Admin --lastname Admin --role Admin --email admin@example.com --password admin123 --force || true &&
      exec airflow webserver"

  airflow-scheduler:
    build:
      context: ./airflow-image
    container_name: itsm_airflow_scheduler
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./data:/opt/airflow/dbt/data
      - ./dbt:/opt/airflow/dbt
      - ./dbt_profiles:/home/airflow/.dbt
    depends_on:
      - postgres
    command: >
      bash -c "
      /opt/airflow/wait-for-postgres.sh &&
      exec airflow scheduler"

  superset:
    image: apache/superset:2.1.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      - postgres
    ports:
      - "8090:8088"
    volumes:
      - ./superset:/app/superset_home
    command: >
      /bin/sh -c "
      superset fab create-admin --username ${SUPERSET_ADMIN_USER} --password ${SUPERSET_ADMIN_PASSWORD} --firstname Superset --lastname Admin --email ${SUPERSET_ADMIN_EMAIL} || true &&
      superset db upgrade || true &&
      superset init || true &&
      superset run -p 8088 -h 0.0.0.0"

volumes:
  postgres_data:
  pgadmin_data:
  airflow_logs:
  superset_data:

networks:
  default:
    name: itsm_net
